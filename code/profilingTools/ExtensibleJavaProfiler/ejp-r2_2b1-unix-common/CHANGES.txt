$Id: CHANGES.txt,v 1.3 2005/03/24 15:42:08 vauclair Exp $


2005/03/24, 2.2beta1 (r2_2b1)
=============================

Notes:
This release fixes all known bugs. It has been tested on various platforms and
computer architectures. Mac OS X and Sparc Solaris are now fully supported.
New features improve the user experience.
Simplified release system: EJP Tracer and Presenter are now versioned and 
released together.

Presenter changes:
- Fixed bug #925446 "Method ID of exit event (xxx) does not match entry event
  (yyy)". The parser was not correctly detecting when a	method was entered
  with a given version of a loaded class, and exited with another version.
- Fixed bug #928574 "fails to load (EOFException in RandomAccessFile)".
  Improved classloader parser performance by buffering input.
- File(s) to open can be specified on the command line.
- Support for big (>2GB) .ejp files.
- When deep-expanding nodes, a progress dialog is now displayed. The operation
  can be stopped at any time by clicking on the Cancel button.
- Improved screenshots of displayed tree (the whole tree is now exported, not
  only the part viewable in the scroll pane).
- Implemented export of displayed tree to HMTL, XML and CSV.
- File chooser dialog remembers last browsed directory (only during the 
  application lifetime).
- Nodes no longer display method parameters, but show "..." instead. This was
  done to hopefully improve readability.
- Times of entry into a method and exit from it are now displayed in node 
  tooltips.
- Java files are compiled with the debug (-g) option.
- Exception stack traces are displayed in Log window.
- Support for big-endian files.

Tracer changes:
- Fixed bug #904736 "Assertion fails in stl_alloc.h, line 291".
- Fixed bug #926898 "Assertion failed: m_methodIdStack.back() == methodId_".
- Implemented RFE #1056040 "Mac OS X Support".
- Applied patch #899847 (ability to specify location of filter.cfg).
  Thanks to Jon Nall.
- Fixed a bug where some threads could be incorrectly named.
- Fixed a crash where output file was closed and renamed before all events
  were written to it.
- New output files format (incompatible with previous versions).
- Removed dependency to zlib.
- New file naming scheme: when a thread is created, its file name extension is
  ".ejp.!"; when the thread is terminated, its file name extension is changed
  to ".ejp".
- Support for GCC 3.4.
- Sample startup script and filters for JBoss.
- Fully tested on the following environments:
  * ppc-darwin
  * sparc-solaris
  * x86-linux
  * x86-solaris
  * x86-win32-cygwin
  * x86-win32-mingw


2004/02/12, Tracer 2.1beta2 (r2_1b2)
====================================

Notes:
This release fixes an assertion failure introduced by previous release.
Generated trace files are compatible with EJP Presenter v2.0beta1 or later.

Changes:
- Fixed a bug (assertion exception during application shutdown) introduced by
  new filter implementation (SF bug #895888).
- Fixed EOL of logs on Win32.
- Added a documentation note in filter.cfg about the implicit final include 
  rule.
- Raised size of output file buffers to 4kb to improve performance.


2004/02/07, Tracer 2.1beta1 (r2_1b1)
====================================

Notes:
This release introduces a major (and most requested) feature: the filtering of
profiled classes. It makes it reasonable to profile e.g. J2EE applications
inside their containers. Class filter rules are defined using simple
configuration files (see a sample in bin/filter.cfg).
This release also fixes the crash reported in JBoss, Catalina and some other
multi-threaded applications.
Generated trace files are compatible with EJP Presenter v2.0beta1 or later.

Changes:
- Implemented customizable class filters to restrict data acquisition (SF RFE
  #873411).
- Fixed a very common bug (aka JBoss/Catalina bug) occurring in multi-threaded
  applications during startup of some specific threads (SF bugs #873770 and
  probably #660473).
- Handled unloading of classes and methods by the JVM (SF RFE #885469).
- Reactivated suppression of time spent in profiler.
- Differed file creation and buffered file output to improve performance. As a
  drawback, memory used by the Tracer increases significantly. Will see if
  this is problem in some environments.


2004/01/07, Presenter 2.1beta1 (r2_1b1)
=======================================

Notes:
Fixes I/O errors occurring while loading huge files into the Presenter. Adds
a new filter that hides less significant nodes.
This release is compatible with trace files created by EJP Tracer v2.0beta1 or
later.

Changes:
- Replaced memory-mapped buffers with random access files to fix an error
  when opening big files (1GB or more).
- Fixed invalid (-1) body times in leaf nodes.
- Added a new filter: Remove-non-significant, that hides nodes which time
  spent is bellow a customizable threshold.
- Made filters no longer customizable once a view is created.


2003/12/15, Presenter 2.0beta1 (r2_0b1)
=======================================

Notes:
New lazy parser feature. Tree nodes are loaded into memory and processed only
when opened. This results in instant loading of profiles, whatever their size
is, and solves most memory problems.
User experience was improved with keyboard accelerators in many places of the
Presenter.
This release only handles trace files created by EJP Tracer v2.0beta1 or
later.

Changes:
- Handled files now end with ".ejp".
- Lazy parser. Allows for instant and little memory-consuming loading of
  trace profiles.
- Keyboard accelerators: + (expand), - (collapse) and * (expand all) for call
  call tree navigation.
- Mnemonics and default buttons for New View and Run Program dialogs; ESCAPE
  key closes the dialogs.
- Mnemonics and accelerators for many menu items.


2003/12/15, Tracer 2.0beta1 (r2_0b1)
====================================

Notes:
This release contains fixes for some major bugs. It has also been heavily
refactored to improve maintainability.
Generated trace files can only be opened by EJP Presenter v2.0beta1 or later.

Changes:
- Generated files now end with ".ejp".
- New indexed encoding of method events allow for lazy parsing by
  the Presenter. Zlib compression is disabled for now, so generated files are
  very big.
- Updated STL allocator to fix rare access violations on Win32 with MinGW.
- Better correction of the time spent in profiler.
- Thread-safe access to disk to prevent data corruption and to the console.
- Thread names are now always correctly obtained.


2003/08/06, Presenter 1.0beta3 (r1_0b3)
=======================================

Notes:
New feature: package filter. It is now possible to remove from display, the
nodes for events on methods declared in classes from specific packages.
Excluded package list can be customized for each view.

Changes:
- New Common.Remove-packages filter to hide specific Java packages.
- Initial implementation of a lazy parser. Such a parser does not read whole
  files at once, but rather collects the information needed to display the
  first tree level. Additional information is read from file as nodes are
  expanded by the user. This early implementation results in lower memory
  usage, but is currently not acceptable in terms of speed because of the file
  format used. An optimized, indexed, encoding of profiles is under design and
  should address this issue.
  For this reason, the lazy parser is disabled by default for the moment.
  Refactorings implied in its implementation resulted in one minor feature
  being temporarily disabled: the progress bar no longer shows up during
  parsing.


2003/08/05, Tracer 1.0beta4 (r1_0b4)
====================================

Notes:
This version introduces a new ID entropy reduction system that results in
lower overhead on speed and memory during profiling.
It also addresses some compilation and execution issues.

Changes:
- Simplified the ID entropy reduction system. Should result in performance
  enhancement and lower memory overhead during profiling.
- Fixed a compilation problem under Solaris with GCC: added the "-mimpure-text"
  command-line option.
  Thanks to Richard Collingridge for reporting the problem and suggesting
  this solution.
- Updated run scripts for Win32. When started up from another directory
  than bin/, they now correctly find required libraries.
- Updated run scripts for Unik-likes. Defined environment variables are now
  exported.
- Updated instructions for building the native library. Added a notice about
  libz.a presence on Solaris (thanks to Richard Collingridge for reporting this
  potential issue).  


2003/06/13, Presenter 1.0beta2 (r1_0b2)
=======================================

Notes:
Requires EJP Tracer v1.0beta3 or later.

Changes:
- Added new feature: default filters. A set of default filters can now be
  specified in the settings. Those are automatically activated when creating
  new views.
- Updated for new multi-threading support of EJP Tracer v1.0beta3. Note that
  this version is no longer compatible with profiles generated by EJP Tracer
  versions before 1.0beta3. Thus, support for old profiles could easily be
  added if it is required by users.
- Fixed initial search path for Tracer output files.
- Fixed displayed ratios for 0-second profiles.
- Minor changes in Funnel filters order.


2003/06/13, Tracer 1.0beta3 (r1_0b3)
====================================

Notes:
Requires EJP Presenter v1.0beta2 or later.

Changes:
- Added multi-threading support. EJP Tracer now generates one output file per
  thread and safely protects shared resources with JVM monitors. This should
  close bugs 628914, 660473 and possibly more.
  Thanks to Sebastien Caille for the initial implementation of thread contexts.
- Fixed correction of time spent in the profiler agent's code for more accurate
  timings.
- Added a BUILDING.txt file with detailed instructions for supported platforms.
- Modified makefiles for Solaris, Linux, Win32-MinGW and Win32-MSVC++ to
  factorize common parts.
- Added a Win32-MSVC++ project for building zlib as a multi-threaded static
  library.
- Applied various refactorings to source code to make it look more like C++.
- Included Java samples for tests.


2003/05/06, Tracer 1.0beta2 (r1_0b2)
====================================

Notes:
Includes a pre-built DLL for Win32.
Addresses one of the most reported bugs: method list size limitation.
Improves performance.

Changes:
- Added a MinGW makefile.
- Fixed linux makefile.
- Included win32 DLL to release script.
- Fixed method list size limitation by using a STL map.
  Thanks to Dirk Hoffmann for suggesting and implementing the solution.


2002/03/23, Presenter 1.0beta1 (r1_0b1)
=======================================

Notes:
First public release.


2002/03/23, Tracer 1.0beta1 (r1_0b1)
====================================

Notes:
First public release.